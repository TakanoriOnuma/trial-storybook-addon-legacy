{"version":3,"sources":["../src/constants.ts","../src/myAddonState/useReadonlyMyAddonStateFromPreview.ts","../src/myAddonState/MyAddonState.ts","../src/createAssignableParametersForMyAddon.ts"],"names":["ADDON_ID","PANEL_ID","PARAM_KEY","useGlobals","useParameter","INITIAL_MY_ADDON_STATE","useReadonlyMyAddonStateFromPreview","globals","createAssignableParametersForMyAddon","params"],"mappings":"AAAO,IAAMA,EAAW,qBACXC,EAAW,GAAGD,CAAQ,SACtBE,EAAY,mBCDzB,OAAS,cAAAC,EAAY,gBAAAC,MAAoB,yBCMlC,IAAMC,EAAuC,CAAC,EDC9C,IAAMC,EAAqC,IAAoB,CACpE,GAAM,CAACC,CAAO,EAAIJ,EAAW,EAK7B,MAAO,CACL,GAJaC,EAAaF,EAAWG,CAAsB,GACVA,EAIjD,GAAGE,EAAQL,CAAS,CACtB,CACF,EEXO,IAAMM,EAAwCC,IAC5C,CACL,CAACP,CAAS,EAAGO,CACf","sourcesContent":["export const ADDON_ID = \"storybook/my-addon\";\nexport const PANEL_ID = `${ADDON_ID}/panel`;\nexport const PARAM_KEY = `myAddonParameter`;\n","import { PARAM_KEY } from \"../constants\";\nimport { useGlobals, useParameter } from \"@storybook/preview-api\";\n\nimport { INITIAL_MY_ADDON_STATE, MyAddonState } from \"./MyAddonState\";\n\n/**\n * preview側で使用できる読み取り専用のMyAddonStateを参照するhooks\n */\nexport const useReadonlyMyAddonStateFromPreview = (): MyAddonState => {\n  const [globals] = useGlobals();\n\n  const params = useParameter(PARAM_KEY, INITIAL_MY_ADDON_STATE);\n  const fallbackAddonState: MyAddonState = params ?? INITIAL_MY_ADDON_STATE;\n\n  return {\n    ...fallbackAddonState,\n    ...globals[PARAM_KEY],\n  };\n};\n","export type MyAddonState = {\n  /** フラグ */\n  flag?: boolean;\n  /** 数値 */\n  num?: number;\n};\n\nexport const INITIAL_MY_ADDON_STATE: MyAddonState = {};\n","import { MyAddonState } from \"./myAddonState/MyAddonState\";\nimport { PARAM_KEY } from \"./constants\";\n\n/**\n * storybookのparametersにassignして差し込めるオブジェクトを生成する\n * @param params - 自作アドオン用のパラメータ\n */\nexport const createAssignableParametersForMyAddon = (params: MyAddonState) => {\n  return {\n    [PARAM_KEY]: params,\n  };\n};\n"]}